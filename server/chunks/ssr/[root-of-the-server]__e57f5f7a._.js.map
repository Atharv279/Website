{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/markdown.ts"],"sourcesContent":["\nimport fs from 'fs/promises';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport { remark } from 'remark';\nimport html from 'remark-html';\nimport type { Post, LegalPage } from '@/types';\n\nconst postsDirectory = path.join(process.cwd(), 'src/content/posts');\nconst legalDirectory = path.join(process.cwd(), 'src/content/legal');\n\nfunction calculateReadingTime(text: string): string {\n  const wordsPerMinute = 200;\n  const numberOfWords = text.split(/\\s/g).length;\n  const minutes = numberOfWords / wordsPerMinute;\n  const readTime = Math.ceil(minutes);\n  return `${readTime} min read`;\n}\n\nexport async function getSortedPostsData(): Promise<Omit<Post, 'contentHtml' | 'readingTime' | 'slug'>[]> {\n  try {\n    const fileNames = await fs.readdir(postsDirectory);\n    const allPostsDataPromises = fileNames.map(async (fileName) => {\n      const slug = fileName.replace(/\\.md$/, '');\n      const fullPath = path.join(postsDirectory, fileName);\n      const fileContents = await fs.readFile(fullPath, 'utf8');\n      const matterResult = matter(fileContents);\n\n      if (!matterResult.data.title || !matterResult.data.date) {\n        return null;\n      }\n\n      return {\n        slug,\n        title: matterResult.data.title,\n        date: matterResult.data.date,\n        author: matterResult.data.author,\n        description: matterResult.data.description,\n        category: matterResult.data.category,\n        tags: matterResult.data.tags || [],\n        image: matterResult.data.image,\n        aiHint: matterResult.data.aiHint, // Extract aiHint\n      } as Omit<Post, 'contentHtml' | 'readingTime' | 'slug'>;\n    });\n\n    const allPostsDataWithNulls = await Promise.all(allPostsDataPromises);\n    \n    const validPostsData = allPostsDataWithNulls.filter(\n      (post): post is Omit<Post, 'contentHtml' | 'readingTime' | 'slug'> => post !== null\n    );\n\n    return validPostsData.sort((a, b) => (a.date < b.date ? 1 : -1));\n  } catch (error) {\n    console.error(\"Error reading posts directory:\", error);\n    return [];\n  }\n}\n\nexport async function getAllPostSlugs() {\n  try {\n    const fileNames = await fs.readdir(postsDirectory);\n    return fileNames.map((fileName) => {\n      return {\n        params: {\n          slug: fileName.replace(/\\.md$/, ''),\n        },\n      };\n    });\n  } catch (error) {\n    console.error(\"Error reading post slugs:\", error);\n    return [];\n  }\n}\n\nexport async function getPostData(slug: string): Promise<Post | null> {\n  try {\n    const fullPath = path.join(postsDirectory, `${slug}.md`);\n    const fileContents = await fs.readFile(fullPath, 'utf8');\n    const matterResult = matter(fileContents);\n\n    if (!matterResult.data.title || !matterResult.data.date) {\n        return null;\n    }\n\n    const processedContent = await remark()\n      .use(html)\n      .process(matterResult.content);\n    const contentHtml = processedContent.toString();\n    const readingTime = calculateReadingTime(matterResult.content);\n\n    return {\n      slug,\n      contentHtml,\n      readingTime,\n      title: matterResult.data.title,\n      date: matterResult.data.date,\n      author: matterResult.data.author || 'Finance Flash Team',\n      description: matterResult.data.description || '',\n      category: matterResult.data.category || 'Uncategorized',\n      tags: matterResult.data.tags || [],\n      image: matterResult.data.image,\n      aiHint: matterResult.data.aiHint, // Extract aiHint\n    };\n  } catch (error) {\n    return null; \n  }\n}\n\n\nexport async function getLegalPageData(slug: string): Promise<LegalPage | null> {\n  const fullPath = path.join(legalDirectory, `${slug}.md`);\n  try {\n    const fileContents = await fs.readFile(fullPath, 'utf8');\n    const matterResult = matter(fileContents);\n\n    if (!matterResult.data.title) {\n        return null;\n    }\n\n    const processedContent = await remark()\n      .use(html)\n      .process(matterResult.content);\n    const contentHtml = processedContent.toString();\n\n    return {\n      slug,\n      title: matterResult.data.title as string,\n      contentHtml,\n    };\n  } catch (error) {\n    return null;\n  }\n}\n\nexport async function getAllLegalPageSlugs() {\n  try {\n    const fileNames = await fs.readdir(legalDirectory);\n    return fileNames.map((fileName) => {\n      return {\n        params: {\n          page: fileName.replace(/\\.md$/, ''),\n        },\n      };\n    });\n  } catch (error) {\n    console.error(\"Error reading legal page slugs:\", error);\n    return [];\n  }\n}\n\nexport async function getAllCategories(): Promise<string[]> {\n  const posts = await getSortedPostsData();\n  const categories = new Set(posts.map(post => post.category).filter(Boolean) as string[]);\n  return Array.from(categories);\n}\n\nexport async function getAllTags(): Promise<string[]> {\n  const posts = await getSortedPostsData();\n  const tags = new Set(posts.flatMap(post => post.tags).filter(Boolean) as string[]);\n  return Array.from(tags);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28legal%29/%5Bpage%5D/page.tsx"],"sourcesContent":["import { getLegalPageData, getAllLegalPageSlugs } from '@/lib/markdown';\nimport { notFound } from 'next/navigation';\nimport type { Metadata } from 'next';\n\ninterface LegalPageProps {\n  params: {\n    page: string; // e.g., 'privacy-policy'\n  };\n}\n\nexport async function generateStaticParams() {\n  const paths = await getAllLegalPageSlugs();\n  return paths;\n}\n\nexport async function generateMetadata({ params }: LegalPageProps): Promise<Metadata> {\n  const pageData = await getLegalPageData(params.page);\n  if (!pageData) {\n    return { title: 'Page Not Found' };\n  }\n  return {\n    title: pageData.title,\n    description: `Read the ${pageData.title} for Finance Flash.`,\n  };\n}\n\nexport default async function LegalPageDisplay({ params }: LegalPageProps) {\n  const pageData = await getLegalPageData(params.page);\n\n  if (!pageData) {\n    notFound();\n  }\n\n  return (\n    <div className=\"max-w-3xl mx-auto py-8 md:py-12 px-4\">\n      <header className=\"mb-8 text-center\">\n        <h1 className=\"font-headline text-3xl md:text-4xl font-bold text-primary\">\n          {pageData.title}\n        </h1>\n      </header>\n      <div\n        className=\"prose prose-sm sm:prose lg:prose-lg dark:prose-invert mx-auto prose-p:text-foreground/90 prose-headings:text-primary prose-a:text-accent prose-strong:text-foreground\"\n        dangerouslySetInnerHTML={{ __html: pageData.contentHtml }}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;;AASO,eAAe;IACpB,MAAM,QAAQ,MAAM,CAAA,GAAA,sHAAA,CAAA,uBAAoB,AAAD;IACvC,OAAO;AACT;AAEO,eAAe,iBAAiB,EAAE,MAAM,EAAkB;IAC/D,MAAM,WAAW,MAAM,CAAA,GAAA,sHAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,IAAI;IACnD,IAAI,CAAC,UAAU;QACb,OAAO;YAAE,OAAO;QAAiB;IACnC;IACA,OAAO;QACL,OAAO,SAAS,KAAK;QACrB,aAAa,CAAC,SAAS,EAAE,SAAS,KAAK,CAAC,mBAAmB,CAAC;IAC9D;AACF;AAEe,eAAe,iBAAiB,EAAE,MAAM,EAAkB;IACvE,MAAM,WAAW,MAAM,CAAA,GAAA,sHAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,IAAI;IAEnD,IAAI,CAAC,UAAU;QACb,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAG,WAAU;8BACX,SAAS,KAAK;;;;;;;;;;;0BAGnB,8OAAC;gBACC,WAAU;gBACV,yBAAyB;oBAAE,QAAQ,SAAS,WAAW;gBAAC;;;;;;;;;;;;AAIhE","debugId":null}}]
}